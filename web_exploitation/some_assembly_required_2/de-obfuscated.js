'use strict';
const array = ["copy_char", "value", "207aLjBod", "1301420SaUSqf", "233ZRpipt", "2224QffgXU", "check_flag", "408533hsoVYx", "instance", "278338GVFUrH", "Correct!", "549933ZVjkwI", "innerHTML", "charCodeAt", "./aD8SvhyVkb", "result", "977AzKzwq", "Incorrect!", "exports", "length", "getElementById", "1jIrMBu", "input", "615361geljRK"];
const getValue = function (url, whensCollection) {
  /** @type {number} */
  url = url - 195;
  let res = array[url];
  return res;
};
// arrayのシャッフル用の関数だが、userPsdの結果が310022であり、すぐにbreakされるため、実質意味をなしていない。
(function (data, oldPassword) {
  const toMonths = getValue;
  for (; !![];) {
    try {
      const userPsd = -parseInt(toMonths(200)) * -parseInt(toMonths(201)) + -parseInt(toMonths(205)) + parseInt(toMonths(207)) + parseInt(toMonths(195)) + -parseInt(toMonths(198)) * parseInt(toMonths(212)) + parseInt(toMonths(203)) + -parseInt(toMonths(217)) * parseInt(toMonths(199));
      if (userPsd === oldPassword) {
        break;
      } else {
        data["push"](data["shift"]());
      }
    } catch (_0x4f8a) {
      data["push"](data["shift"]());
    }
  }
})(array, 310022);

// webassemblyを利用して、exportsを変数に詰め込む
let exports;
(async () => {
  const edgeId = getValue;
  let _0x1adb5f = await fetch('aD8SvhyVkb');
  let rpm_traffic = await WebAssembly["instantiate"](await _0x1adb5f["arrayBuffer"]());
  let updatedEdgesById = rpm_traffic['instance'];
  exports = updatedEdgesById['exports'];
})();

/**
 * @return {undefined}
 */
function onButtonPress() {
  const navigatePop = getValue;
  let params = document['getElementById']('input')['value'];
  for (let i = 0; i < params["length"]; i++) {
    exports['copy_char'](params['charCodeAt'](i), i);
  }
  exports["copy_char"](0, params['length']);
  if (exports['check_flag']() == 1) {
    document["getElementById"]('result')['innerHTML'] = 'Correct!';
  } else {
    document['getElementById']('result')["innerHTML"] = 'Incorrect!';
  }
}
;