#!/usr/bin/python

import re
import requests
import time

from base64 import b64decode, b64encode
from tqdm import tqdm

"""
Bit Flipping Attack requires the mode of encryption used for encryption to be CBC(Cipher Block Chaining)

"""

def bit_flipping_attack(position, bit, ciphertext):
  byte_list = bytearray(ciphertext)
  byte_list[position] = byte_list[position] ^ bit
  tamperedtext = bytes(byte_list)
  return tamperedtext


if __name__ == '__main__':

  flag_pattern = re.compile("picoCTF{.*}")
  url = 'http://mercury.picoctf.net:34962/'
  session = requests.session()

  res = session.get(url)
  target = session.cookies.get('auth_name')

  # it is decoded by base64 twice
  decoded = b64decode(b64decode(target).decode())
  for i in tqdm(range(len(decoded)), desc="Position"):
    for j in tqdm(range(128), desc="Flipping bit"):
      flipped_raw = bit_flipping_attack(i, j, decoded)
      # it is encoded by base64 twice
      flipped_encode64 = b64encode(b64encode(flipped_raw)).decode()
      cookies = {'auth_name': flipped_encode64 }
      res = requests.get('http://mercury.picoctf.net:34962/', cookies=cookies)
      result = flag_pattern.findall(res.text)
      if result:
        print("", flush=True)
        print("Found the flag")
        print(f"original: {decoded}")
        print(f"tampared: {flipped_raw}")
        print(f"auth_name: {flipped_encode64}")
        print(result[0])
        exit(0)
  print("Not Found")
